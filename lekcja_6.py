# -*- coding: utf-8 -*-
"""Lekcja_6.ipynb

Automatically generated by Colab.

##Funkcje: enumerate() i zip()
zwraca indeks i wartosc listy
laczy elementy z kilku list w pary
"""

kolory=["czerwony","zielony","niebieski"]
for i, kolory in enumerate(kolory):
  print(f"(i): (kolory)")

imiona = ["ala", "ola", "jan"]
punkty =["89", "70", "86"]
for imie, pkt in zip(imiona, punkty):
  print(f"(imie) zdobyl(a) {pkt} punktow")

"""wyszukaj z listy wartosc maksymalna i podaj jej pozycje (liczac od 1) lista wypelniona losowymi liczbami, 10 elementow"""

import random
lista = []
for i in range(10):
  lista.append(random.randint(1,100))
print(lista)
max = lista[0]
position = 0

for i, liczba in enumerate(lista):
  if liczba > max:
    pozycja = i
print(f"najwieksza liczba: {max} (pozycja { pozycja +1})")

"""continue i break"""

for liczba in range(1,10):
  if liczba == 5:
    print("przerywam petle przy piatce")
    break
  print(liczba)

for liczba in range(1,10):
  if liczba % 2==0:
    continue
  print("nieparzysta:", liczba)

"""to samo co wczesniej tylko ze z uzyciem continue"""

import random
lista = []
for i in range(10):
  lista.append(random.randint(1,100))
print(lista)
max = lista[0]
position = 0

for i, liczba in enumerate(lista):
  if liczba <= max:
    continue
  pozycja = i
  max = lista[i]
print(f"najwieksza liczba: {max} (pozycja {pozycja +1})")

bin_s = input("podaj liczbe binarna ")
bin=[]
for bit in bin_s:
  bin.append(int(bit))
dec = 0
poprawnosc = 1
rev_bin = reversed(bin)
for i, b in enumerate(rev_bin):
  if b>1:
    print("to nie liczba binarna")
    poprawnosc = 0
    break
  dec += 2 ** i * b
if poprawnosc == 1:
  print(dec)

"""petla while"""

licznik = 1
while licznik <= 5:
  print("licznik: ", licznik)
  licznik += 1

haslo = "pomarancza123"
podane = ""
while podane != haslo:
  podane =input("podaj haslo: ")
print("dostep przyznany")